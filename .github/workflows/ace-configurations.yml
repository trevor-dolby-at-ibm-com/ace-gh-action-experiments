# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**-generated*'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**-generated*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        #env: 
        #  GH_TOKEN: ${{ github.token }} 
        run: |
          #!/bin/bash
          
          echo Creating a new directory
          mkdir new-checkout
          cd new-checkout
          set -x
          
          git config --global user.email "trevor.dolby@ibm.com"
          git config --global user.name "Trevor Dolby (automation)"
          git config --global --add --bool push.autoSetupRemote true

          echo ${{ secrets.GH_PAT }} | gh auth login --with-token
          gh auth setup-git
          git clone -b ${GITHUB_REF_NAME} https://github.com/${GITHUB_REPOSITORY}
          export REPO_NAME=$(basename `echo $GITHUB_REPOSITORY`)
          cd $REPO_NAME

          ./find-and-convert-policies.sh
          ./find-and-convert-serverconf.sh

          # Check to see if anything changed
          if [ `git status --porcelain=1 | grep generated | wc -l` -ne 0 ]; then
            echo "Generated files changed - creating and pushing git commit"
            git add . 
            git status
            git remote -v
            export DATE=$(date '+%Y%m%d%H%M%S')
            export COMMIT=$(git log -1 --pretty=%h)
            export TAG="$DATE"-"$COMMIT"
            git commit -m "Generator commit $TAG" && git push 
          else
            echo "Nothing new generated - not creating a new git commit"
          fi
